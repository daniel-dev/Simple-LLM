# GitHub Actions Workflow for LLM Factory
# Place this content in .github/workflows/ci.yml in your project root

name: LLM Factory CI/CD

# Trigger workflow on push and pull requests
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

# Environment variables
env:
  PYTHON_VERSION: '3.13'

jobs:
  # Test job - run pipeline and tests
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🔄 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: 📦 Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: 📥 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🧪 Test imports
      run: |
        python -c "import torch, transformers, flask; print('✅ Dependencies OK')"
        
    - name: 🏃 Run pipeline
      run: |
        echo "🧪 Testing LLM Factory Pipeline"
        python run_simple_finetuning.py
        echo "✅ Pipeline completed successfully"
        
    - name: 🌐 Test Flask app
      run: |
        echo "🌐 Testing Flask Application"
        python -c "from app import app; print('✅ Flask app imports successfully')"
        
    - name: 📤 Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: pipeline-results
        path: |
          data/processed/
          models/trained/
        retention-days: 1

  # Build Docker image (optional)
  build-docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 🔄 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔑 Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🐳 Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ github.sha }}

  # Deploy documentation to GitHub Pages
  deploy-docs:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 🔄 Checkout code
      uses: actions/checkout@v4
      
    - name: 📚 Setup Pages
      uses: actions/configure-pages@v3
      
    - name: 📁 Prepare documentation
      run: |
        mkdir -p _site
        cp -r docs/* _site/
        cp README.md _site/index.md
        
    - name: 📤 Upload Pages artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: _site
        
    - name: 🚀 Deploy to GitHub Pages
      uses: actions/deploy-pages@v2

# Security and code quality
  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🔄 Checkout code
      uses: actions/checkout@v4
      
    - name: 🛡️ Run CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: python
        
    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
